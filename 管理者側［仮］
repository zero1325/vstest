<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>タスク管理</title>
<style>
  /* CSSは適宜追加してください */
  .task_item {
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
  .task_item.close {
    background-color: #f8d7da; /* 期限切れタスクの背景色 */
  }
  .task_item.warning {
    background-color: #fff3cd; /* 期限が近いタスクの背景色 */
  }
</style>
</head>
<body>
  <h1>タスク管理</h1>
  <form id="taskForm">
    <div class="form-group">
      <label for="taskValue">タスク内容:</label>
      <input type="text" id="taskValue" name="taskValue" placeholder="タスク内容" required>
    </div>
    <div class="form-group">
      <label for="taskDate">期限日:</label>
      <input type="date" id="taskDate" name="taskDate" required>
    </div>
    <button type="submit">タスク入力</button>
  </form>

  <div id="taskList">
    <h2>タスク一覧</h2>
    <ul id="taskItems"></ul>
  </div>

  <div id="expiredTasks">
    <h2>期限切れの提出物</h2>
    <ul id="expiredItems"></ul>
  </div>

  <script>
    // フォームのsubmitイベントを取得
    document.getElementById('taskForm').addEventListener('submit', function(event) {
      event.preventDefault(); // デフォルトのsubmit動作をキャンセル

      // 入力されたタスク内容と日付を取得
      var taskValue = document.getElementById('taskValue').value;
      var taskDate = document.getElementById('taskDate').value;

      // タスク内容が空でない場合の処理
      if (taskValue.trim() !== '') {
        // タスクリストに新しいタスクを追加する処理
        addTaskToList(taskValue, taskDate);

        // 入力フォームをリセットする
        document.getElementById('taskValue').value = '';
        document.getElementById('taskDate').value = '';
      } else {
        alert('タスク内容を入力してください');
      }
    });

    // タスクリストにタスクを追加する関数
    function addTaskToList(taskValue, taskDate) {
      // 新しいタスクの要素を作成
      var taskItem = document.createElement('li');
      taskItem.textContent = taskValue + ' - 期限: ' + taskDate;
      taskItem.classList.add('task_item'); // CSSのスタイルを適用するためのクラス

      // 期限の日付をDateオブジェクトに変換
      var deadlineDate = new Date(taskDate);
      var today = new Date();

      // 期限が過ぎた場合の処理
      if (deadlineDate < today) {
        // 期限が過ぎていない場合のみ close クラスを追加
        taskItem.classList.add('close');
      } else {
        // 期限が近い場合の処理（例として1日以内）
        var oneDayLater = new Date();
        oneDayLater.setDate(oneDayLater.getDate() + 1);
        if (deadlineDate <= oneDayLater) {
          taskItem.classList.add('warning');
        }
      }

      // 期限が過ぎていない場合のみ、タスクを追加する
      if (deadlineDate >= today) {
        var taskList = document.getElementById('taskItems');
        taskList.appendChild(taskItem);
      } else {
        // 期限が過ぎた場合は期限切れの提出物として追加する
        var expiredList = document.getElementById('expiredItems');
        expiredList.appendChild(taskItem);
      }
    }
  </script>

</body>
</html>
